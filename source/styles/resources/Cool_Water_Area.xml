<!DOCTYPE qgis_style>
<qgis_style version="2">
  <symbols>
    <symbol force_rhr="0" alpha="1" clip_to_extent="1" type="fill" name="Cool Water area">
      <layer enabled="1" pass="0" locked="0" class="SimpleFill">
        <prop k="border_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="color" v="190,236,236,255"/>
        <prop k="joinstyle" v="bevel"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="outline_color" v="116,167,209,255"/>
        <prop k="outline_style" v="solid"/>
        <prop k="outline_width" v="0.46"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="style" v="solid"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" type="QString" name="name"/>
            <Option type="Map" name="properties">
              <Option type="Map" name="fillColor">
                <Option value="true" type="bool" name="active"/>
                <Option value="@symbol_color" type="QString" name="expression"/>
                <Option value="3" type="int" name="type"/>
              </Option>
              <Option type="Map" name="outlineColor">
                <Option value="true" type="bool" name="active"/>
                <Option value="set_color_part(  @symbol_color ,'value',70)" type="QString" name="expression"/>
                <Option value="3" type="int" name="type"/>
              </Option>
            </Option>
            <Option value="collection" type="QString" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
      <layer enabled="1" pass="0" locked="0" class="SVGFill">
        <prop k="angle" v="0"/>
        <prop k="color" v="0,0,255,255"/>
        <prop k="outline_color" v="35,35,35,255"/>
        <prop k="outline_width" v="0.26"/>
        <prop k="outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="outline_width_unit" v="MM"/>
        <prop k="pattern_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="pattern_width_unit" v="MM"/>
        <prop k="svgFile" v="base64:"/>
        <prop k="svg_outline_width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="svg_outline_width_unit" v="MM"/>
        <prop k="width" v="4.8"/>
        <effect enabled="1" type="effectStack">
          <effect type="dropShadow">
            <prop k="blend_mode" v="13"/>
            <prop k="blur_level" v="2.645"/>
            <prop k="blur_unit" v="MM"/>
            <prop k="blur_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="color" v="0,0,0,255"/>
            <prop k="draw_mode" v="2"/>
            <prop k="enabled" v="0"/>
            <prop k="offset_angle" v="135"/>
            <prop k="offset_distance" v="2"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="offset_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="opacity" v="1"/>
          </effect>
          <effect type="outerGlow">
            <prop k="blend_mode" v="0"/>
            <prop k="blur_level" v="2.645"/>
            <prop k="blur_unit" v="MM"/>
            <prop k="blur_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="color1" v="0,0,255,255"/>
            <prop k="color2" v="0,255,0,255"/>
            <prop k="color_type" v="0"/>
            <prop k="discrete" v="0"/>
            <prop k="draw_mode" v="2"/>
            <prop k="enabled" v="0"/>
            <prop k="opacity" v="0.5"/>
            <prop k="rampType" v="gradient"/>
            <prop k="single_color" v="255,255,255,255"/>
            <prop k="spread" v="2"/>
            <prop k="spread_unit" v="MM"/>
            <prop k="spread_unit_scale" v="3x:0,0,0,0,0,0"/>
          </effect>
          <effect type="drawSource">
            <prop k="blend_mode" v="0"/>
            <prop k="draw_mode" v="2"/>
            <prop k="enabled" v="1"/>
            <prop k="opacity" v="0.253"/>
          </effect>
          <effect type="innerShadow">
            <prop k="blend_mode" v="13"/>
            <prop k="blur_level" v="2.645"/>
            <prop k="blur_unit" v="MM"/>
            <prop k="blur_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="color" v="0,0,0,255"/>
            <prop k="draw_mode" v="2"/>
            <prop k="enabled" v="0"/>
            <prop k="offset_angle" v="135"/>
            <prop k="offset_distance" v="2"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="offset_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="opacity" v="1"/>
          </effect>
          <effect type="innerGlow">
            <prop k="blend_mode" v="0"/>
            <prop k="blur_level" v="2.645"/>
            <prop k="blur_unit" v="MM"/>
            <prop k="blur_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="color1" v="0,0,255,255"/>
            <prop k="color2" v="0,255,0,255"/>
            <prop k="color_type" v="0"/>
            <prop k="discrete" v="0"/>
            <prop k="draw_mode" v="2"/>
            <prop k="enabled" v="0"/>
            <prop k="opacity" v="0.5"/>
            <prop k="rampType" v="gradient"/>
            <prop k="single_color" v="255,255,255,255"/>
            <prop k="spread" v="2"/>
            <prop k="spread_unit" v="MM"/>
            <prop k="spread_unit_scale" v="3x:0,0,0,0,0,0"/>
          </effect>
        </effect>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" type="QString" name="name"/>
            <Option name="properties"/>
            <Option value="collection" type="QString" name="type"/>
          </Option>
        </data_defined_properties>
        <symbol force_rhr="0" alpha="1" clip_to_extent="1" type="line" name="@Cool Water area@1">
          <layer enabled="1" pass="0" locked="0" class="SimpleLine">
            <prop k="capstyle" v="square"/>
            <prop k="customdash" v="5;2"/>
            <prop k="customdash_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="customdash_unit" v="MM"/>
            <prop k="draw_inside_polygon" v="0"/>
            <prop k="joinstyle" v="bevel"/>
            <prop k="line_color" v="35,35,35,255"/>
            <prop k="line_style" v="no"/>
            <prop k="line_width" v="0.26"/>
            <prop k="line_width_unit" v="MM"/>
            <prop k="offset" v="0"/>
            <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <prop k="offset_unit" v="MM"/>
            <prop k="ring_filter" v="0"/>
            <prop k="use_custom_dash" v="0"/>
            <prop k="width_map_unit_scale" v="3x:0,0,0,0,0,0"/>
            <data_defined_properties>
              <Option type="Map">
                <Option value="" type="QString" name="name"/>
                <Option name="properties"/>
                <Option value="collection" type="QString" name="type"/>
              </Option>
            </data_defined_properties>
          </layer>
        </symbol>
      </layer>
      <layer enabled="1" pass="0" locked="0" class="ShapeburstFill">
        <prop k="blur_radius" v="10"/>
        <prop k="color" v="190,236,236,0"/>
        <prop k="color1" v="0,0,255,255"/>
        <prop k="color2" v="0,255,0,255"/>
        <prop k="color_type" v="0"/>
        <prop k="discrete" v="0"/>
        <prop k="distance_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="distance_unit" v="MM"/>
        <prop k="gradient_color2" v="190,236,236,255"/>
        <prop k="ignore_rings" v="0"/>
        <prop k="max_distance" v="16"/>
        <prop k="offset" v="0,0"/>
        <prop k="offset_map_unit_scale" v="3x:0,0,0,0,0,0"/>
        <prop k="offset_unit" v="MM"/>
        <prop k="rampType" v="gradient"/>
        <prop k="use_whole_shape" v="0"/>
        <data_defined_properties>
          <Option type="Map">
            <Option value="" type="QString" name="name"/>
            <Option type="Map" name="properties">
              <Option type="Map" name="color2">
                <Option value="true" type="bool" name="active"/>
                <Option value="@symbol_color" type="QString" name="expression"/>
                <Option value="3" type="int" name="type"/>
              </Option>
              <Option type="Map" name="fillColor">
                <Option value="true" type="bool" name="active"/>
                <Option value="set_color_part(  @symbol_color ,'alpha',0)" type="QString" name="expression"/>
                <Option value="3" type="int" name="type"/>
              </Option>
            </Option>
            <Option value="collection" type="QString" name="type"/>
          </Option>
        </data_defined_properties>
      </layer>
    </symbol>
  </symbols>
  <colorramps/>
  <textformats/>
  <labelsettings/>
  <legendpatchshapes/>
</qgis_style>
